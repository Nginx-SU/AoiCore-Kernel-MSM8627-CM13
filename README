				AoiCore + Kernel
			         For Xperia M

This kernel is based on Cyanogenmod 13 source kernel and have main option to optimize Sony Xperia M / M dual device
with include some governor and other tweaks that already available on kernel.

Kernel thread : http://forum.xda-developers.com/xperia-m/orig-development/6-0-aoicore-kernel-t3454265

How to compile kernel from source :
1. Install Ubuntu and Java JDK

2. Install this package on ubuntu
{ sudo apt-get install -y build-essential kernel-package libncurses5-dev bzip2 bin86 qt4-dev-tools libncurses5 git-core nautilus-open-terminal git-core gnupg flex bison gperf libsdl-dev libesd0-dev libwxgtk2.6-dev zip curl libncurses5-dev zlib1g-dev ia32-libs lib32z1-dev lib32ncurses5-dev gcc-multilib g++-multilib adb }

3. Clone My Customize Crosstool-NG Toolchains 
 git clone https://github.com/Nicklas373/Crosstool-NG-Toolchains-5.4.x_Nicki.git

4. Clone AoiCore+ Kernel 
 git clone https://github.com/Nicklas373/AoiCore-Kernel-MSM8627-CM13.git

5. After complete, then use this command to compile kernel 
(on AoiCore+ Kernel directory)

export ARCH=arm
export CROSS_COMPILE=(Your Current Toolchains Location)/bin/arm-unknown-linux-gnueabihf-

Compiling,

make ARCH=arm cyanogenmod_nicki_defconfig
make ARCH=arm CROSS_COMPILE=/home/(Your Current Toolchains Location)/bin/arm-unknown-linux-gnueabihf- > compileLog

Create modules,

mkdir modules
cp arch/arm/boot/zImage modules
find . -name "*.ko" -exec cp {} modules \;


Extracting modules,

cd /home/(Your Current Location)
mkdir AoiCore+_ouput
mv android/kernel/modules AoiCore+_output

Clean before create flashable zip,

cd (Your Kernel Location)
make clean && make mrproper

Create Flashable zip,

- extract Aoi_Core+.zip
- delete all files in system/lib/modules and replace it with your new modules in AoiCore+_output (.ko files)
- delete boot.img-zImage in tmp/kernel and replace it with your zImage from AoiCore+_output and rename it too boot.img-zImage
- create zip use this command on AoiCore+.zip directory

  zip -r AoiCore+_TEST-nicki

Done your kernel is ready to flash and have fun :D
